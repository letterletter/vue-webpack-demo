export declare const PLUGIN_CONNECTOR_NAME = "@mybricks/plugins/service";
export declare const exampleParamsFunc = "export default function ({ params, data, headers, url, method }) {\n  // \u8BBE\u7F6E\u8BF7\u6C42query\u3001\u8BF7\u6C42\u4F53\u3001\u8BF7\u6C42\u5934\n  return { params, data, headers, url, method };\n }\n";
export declare const exampleResultFunc = "export default function (result, { method, url, params, data, headers }, { throwError }) {\n  // return {\n  //  total: result.all,\n  //  dataSource: result.list.map({id, name} => ({\n  //     value:id, label: name\n  //  }))\n  // }\n  return result;\n}\n";
export declare const templateResultFunc = "export default function ({ response, config }, { throwError }) {\n  // if (response.code !== 0) {\n  //    throwError(response.errMsg);\n  //    throwError({ message: response.errMsg || '\u6211\u662F\u590D\u6742\u9519\u8BEF\u5BF9\u8C61' });\n  // }\n  return response\n}\n";
export declare const templateErrorResultFunc = "export default function handleError({ error, response, config }, { throwError }) {\n  // \u9519\u8BEF\u629B\u51FA\u65F6\u9884\u5904\u7406\u6570\u636E\uFF0C\u8BF7\u6CE8\u610F\uFF1A\u5FC5\u987B\u8C03\u7528 throwError \u629B\u51FA\u9519\u8BEF;\n  // config\uFF1A\u8BF7\u6C42\u5165\u53C2\uFF1Berror\uFF1A\u9519\u8BEF\u5BF9\u8C61\uFF1Bresponse\uFF1A\u54CD\u5E94\u539F\u59CB\u5BF9\u8C61\uFF1Bresponse.status\uFF1A\u83B7\u53D6 HTTP \u72B6\u6001\u7801\uFF0Cresponse.data\uFF1A\u83B7\u53D6\u63A5\u53E3\u8FD4\u56DE\u503C\n  throwError(response.data.message || error.message || error);\n}\n";
export declare const SERVICE_TYPE: {
    HTTP: string;
    TG: string;
    KDEV: string;
    FOLDER: string;
    IMPORT: string;
};
/** 分隔符类型 */
export declare const SEPARATOR_TYPE = "separator";
export declare const GLOBAL_PANEL = "global-setting";
export declare let CDN: {
    eslint: string;
    paths: {
        vs: string;
    };
    babel: string;
};
export declare const resetCDN: () => void;
export declare const MarkList: ({
    key: string;
    title: string;
    description: string;
    needMarkValue: boolean;
} | {
    key: string;
    title: string;
    description: string;
    needMarkValue?: undefined;
})[];
export declare const MarkTypeLabel: {
    predicate: string;
    output: string;
};
export declare const MarkTypes: {
    predicate: string[];
    output: string[];
};
export declare enum Methods {
    GET = "GET",
    POST = "POST",
    PUT = "PUT",
    DELETE = "DELETE"
}
