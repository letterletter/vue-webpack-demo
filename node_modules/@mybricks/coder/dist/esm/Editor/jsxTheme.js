function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
export var Theme = /*#__PURE__*/function (Theme) {
  Theme["Dark"] = "vs-dark";
  Theme["Light"] = "light";
  return Theme;
}({});
export var JsxTheme = _defineProperty(_defineProperty({}, Theme.Dark, {
  "--string-color": "#e37a11",
  "--language-keyword-color": "#619ac3",
  "--global-variable-color": "#fae56e",
  "--local-variable-color": "#fae56e",
  "--unused-opacity": 0.5,
  "--grammar-color": "#369b99",
  "--jsx-tag-color": "#4595ce",
  "--jsx-attribute-color": "#afd5f1",
  "--jsx-text-color": "#efeeee",
  "--jsx-tag-angle-bracket": "#888"
}), Theme.Light, {
  "--string-color": "#c96705",
  "--language-keyword-color": "#619ac3",
  "--global-variable-color": "#934d08",
  "--local-variable-color": "#934d08",
  "--unused-opacity": 0.5,
  "--grammar-color": "#369b99",
  "--jsx-tag-color": "#f27b0c",
  "--jsx-attribute-color": "#f94f20",
  "--jsx-text-color": "#333",
  "--jsx-tag-angle-bracket": "#888"
});