var r={d:(o,e)=>{for(var t in e)r.o(e,t)&&!r.o(o,t)&&Object.defineProperty(o,t,{enumerable:!0,get:e[t]})},o:(r,o)=>Object.prototype.hasOwnProperty.call(r,o)},o={};function e(r){var o=r.env,e=r.data,t=r.inputs,a=r.outputs,n=r.logger,s=r.onError,p=e.runImmediate,c=o.vars;try{(null==c?void 0:c.getProps)?(p&&o.runtime&&a.propsData(c.getProps()),t.getProps((function(r,o){try{o.propsData(c.getProps())}catch(r){null==s||s(r),console.error("获取传参组件运行错误.",r),n.error("".concat(r))}}))):(null==s||s("环境变量 vars.getProps 方法未实现"),console.error("【获取传参】组件： 环境变量 vars.getProps 方法未实现"))}catch(r){null==s||s(r),console.error("获取传参组件运行错误.",r),n.error("".concat(r))}}r.d(o,{A:()=>e});var t=o.A;export{t as default};