import*as n from"antd";var e={d:(n,o)=>{for(var t in o)e.o(o,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:o[t]})},o:(n,e)=>Object.prototype.hasOwnProperty.call(n,e)},o={};e.d(o,{A:()=>g});const t=(r={message:()=>n.message},s={},e.d(s,r),s);var r,s,i,a;!function(n){n.success="success",n.error="error",n.info="info",n.warning="warning",n.loading="loading"}(a||(a={})),(i={})[a.success]="成功",i[a.error]="失败",i[a.info]="信息",i[a.warning]="警告",i[a.loading]="等待";var c="showMsg",u="showMsgDone",l=function(n){var e=n.data,o=n.inputs,r=n.outputs,s=n.env,i=e.type,a=e.content,l=e.duration,g=function(){e.isEnd&&r.closeMsg()},d=function(n){t.message[i]({content:n||" ",duration:l,onClose:g,getContainer:function(){return(null==s?void 0:s.canvasElement)||document.body}})};o[c]&&o[c]((function(n,o){if(e.isExternal){"[object Function]"===Object.prototype.toString.call(n)?n=String(n):"string"!=typeof n?n=null===n?"null":void 0===n?"undefined":JSON.stringify(n):""===n&&(n=" ");try{d(n),o[u](n)}catch(n){console.error("Message组件不支持该传入类型内容",n)}}else try{d(s.i18n(a)),o[u](s.i18n(a))}catch(n){console.error("目前该设置,Message组件仅支持传入静态配置内容",n)}}))};function g(n){n.env.runtime&&l(n)}var d=o.A;export{d as default};