var r={d:(t,e)=>{for(var o in e)r.o(e,o)&&!r.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},o:(r,t)=>Object.prototype.hasOwnProperty.call(r,t)},t={};r.d(t,{A:()=>e});const e=function(r){var t=r.inputs,e=r.outputs,o=r.onError;t.input((function(r){try{if(!Object.keys(r).every((function(t){return Array.isArray(r[t])})))throw new Error("输入参数必须是数组");for(var t=[],n=0,a=Object.values(r);n<a.length;n++){var u=a[n];t.push.apply(t,u)}e.output(t)}catch(r){null==o||o(r)}}))};var o=t.A;export{o as default};